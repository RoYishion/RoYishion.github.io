<h2 v-if="isShow">
	<div>abc</div>
        <div>abc</div>
        <div>abc</div>
        {{message}}
</h2>
<h1 v-else>isShow为false，显示我</h1>


data: {
	message: 'Hello World',
	isShow: true
}

v-if的使用：v-if为true时显示出v-if里的内容；反之显示v-else里的内容






v-if和v-else-if和v-else的使用
<h2 v-if="score>=90">优秀</h2>
<h2 v-else-if="score>=80">良好</h2>
<h2 v-else-if="score>=60">及格</h2>
<h2 v-else>不及格</h2>
或者
<h1>{{result}}</h1>
computed: {
	result(){
		let showMessage = '';
                if (this.score >= 90){
                    showMessage = '优秀'
                } else if (this.score >= 80){
                    showMessage = '良好'
                } else if (this.score >= 60){
                    showMessage = '及格'
                } else {
                    showMessage = '不及格'
                }
                return showMessage
	}
}





给两个输入框加入key值之后，可以解决切换类型之后不会清空输入框的问题
<span v-if="isUser">
        <label for="username">用户账号</label>
        <input type="text" id="username" placeholder="用户账户" key="username">
</span>

<span v-else>
        <label for="email">用户邮箱</label>
        <input type="text" id="email" placeholder="用户邮箱" key="email">
</span>

data: {
	isUser: true
}





v-show指令
<h2 v-show="isShow" id="b">{{message}}</h2>

data: {
	message: 'Hello World',
	isShow: true
}

v-if:当条件为false时，包含v-if指令的元素会被从dom中删除
v-show:当条件为false时，v-show只是给元素增加了一个行内样式：display: none，而不会删除元素
<input type="text" v-model="message">
等同于
<input type="text" :value='message' @input='message = $event.target.value'>


v-model结合radio类型，获取选项
<label for="male">
	<input type="radio" id='male' value='男' v-model='sex' name='男'>男
</label>
<label for="female">
        <input type="radio" id='female' value='女' v-model='sex' name='女'>女
</label>
<h2>你选择的是：{{sex}}</h2>

data: {
	sex: '男'
}
添加name属性可以使两个相同的组件互斥，使用v-model之后可以不使用name



v-model结合checkbox类型
1.checkbox单选框
<label for="agree">
	<input type="checkbox" id="agree" v-model="isAgree">同意协议
</label>
<h2>你选择的是：{{isAgree}}</h2>
<button :disabled="!isAgree">下一步</button> -->

2.checkbox多选框
<input type="checkbox" value="篮球" v-model="hobbies">篮球
<input type="checkbox" value="足球" v-model="hobbies">足球
<input type="checkbox" value="羽毛球" v-model="hobbies">羽毛球
<input type="checkbox" value="乒乓球" v-model="hobbies">乒乓球
<h2>你的爱好是：{{hobbies}}</h2>

data: {
	isAgree: false,  //单选框
	hobbies: []  //多选框
}





v-model结合select类型
1.选择一个
<select name="abc" v-model="fruit">
	<option value="苹果">苹果</option>
        <option value="香蕉">香蕉</option>
        <option value="菠萝">菠萝</option>
        <option value="西瓜">西瓜</option>
</select>
<h2>你选择的是：{{fruit}}</h2>

2.选择多个
<select name="abc" v-model="fruits" multiple>
        <option value="苹果">苹果</option>
        <option value="香蕉">香蕉</option>
        <option value="菠萝">菠萝</option>
        <option value="西瓜">西瓜</option>
</select>
<h2>你选择的是：{{fruits}}</h2>

data: {
	fruit: '香蕉',  //选择一个
	fruits: []  //选择多个
}



v-model结合checkbox类型的值绑定
<label v-for="item in originHobbies" :for="item">
        <input type="checkbox" :value="item" :id="item" v-model="hobbies">{{item}}
</label>
<h2>你的爱好是：{{hobbies}}</h2>

data: {
	hobbies: [],
	originHobbies: ['篮球', '足球', '羽毛球', '乒乓球']
}




v-model修饰符的使用
1.修饰符：lazy
<input type="text" v-model.lazy="message">
<h2>{{message}}</h2>
data: {
	message: 'Hello'
}
默认情况下，一旦有数据改变对应的data也会发生改变，lazy修饰符可以让数据在输入框失去焦点或者回车时才会更新。

2.修饰符：number
<input type="number" v-model.number="age">
<h2>{{age}}--{{typeof age}}</h2>
data: {
	age: 1
}

3.修饰符：trim
<input type="text" v-model.trim="name">
<h2>{{name}}</h2>
data: {
	name: ''
}
自动去除输入内容两边的空格